// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// simulateFromIBBs
arma::umat simulateFromIBBs(arma::vec precs, arma::vec m, arma::urowvec total_draws);
RcppExport SEXP _conliga_simulateFromIBBs(SEXP precsSEXP, SEXP mSEXP, SEXP total_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type precs(precsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type total_draws(total_drawsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateFromIBBs(precs, m, total_draws));
    return rcpp_result_gen;
END_RCPP
}
// getBBQuantiles
arma::mat getBBQuantiles(arma::vec q, arma::uvec counts, arma::vec means, double precision);
RcppExport SEXP _conliga_getBBQuantiles(SEXP qSEXP, SEXP countsSEXP, SEXP meansSEXP, SEXP precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type means(meansSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(getBBQuantiles(q, counts, means, precision));
    return rcpp_result_gen;
END_RCPP
}
// simStickyHMM
List simStickyHMM(arma::umat chr_mat, int total_draws, double self_trans, int real_num_states, arma::vec means, double precision, double gamma_a, double gamma_scale);
RcppExport SEXP _conliga_simStickyHMM(SEXP chr_matSEXP, SEXP total_drawsSEXP, SEXP self_transSEXP, SEXP real_num_statesSEXP, SEXP meansSEXP, SEXP precisionSEXP, SEXP gamma_aSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type chr_mat(chr_matSEXP);
    Rcpp::traits::input_parameter< int >::type total_draws(total_drawsSEXP);
    Rcpp::traits::input_parameter< double >::type self_trans(self_transSEXP);
    Rcpp::traits::input_parameter< int >::type real_num_states(real_num_statesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type means(meansSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_a(gamma_aSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(simStickyHMM(chr_mat, total_draws, self_trans, real_num_states, means, precision, gamma_a, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// simStickyHMMGivenStateCopyNum
List simStickyHMMGivenStateCopyNum(arma::umat chr_mat, int total_draws, double self_trans, int real_num_states, arma::vec means, double precision, arma::vec RCNs);
RcppExport SEXP _conliga_simStickyHMMGivenStateCopyNum(SEXP chr_matSEXP, SEXP total_drawsSEXP, SEXP self_transSEXP, SEXP real_num_statesSEXP, SEXP meansSEXP, SEXP precisionSEXP, SEXP RCNsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type chr_mat(chr_matSEXP);
    Rcpp::traits::input_parameter< int >::type total_draws(total_drawsSEXP);
    Rcpp::traits::input_parameter< double >::type self_trans(self_transSEXP);
    Rcpp::traits::input_parameter< int >::type real_num_states(real_num_statesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type means(meansSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type RCNs(RCNsSEXP);
    rcpp_result_gen = Rcpp::wrap(simStickyHMMGivenStateCopyNum(chr_mat, total_draws, self_trans, real_num_states, means, precision, RCNs));
    return rcpp_result_gen;
END_RCPP
}
// simCountsFromLociCopyNum
List simCountsFromLociCopyNum(arma::vec lcns, arma::umat chr_mat, arma::vec means, double precision, int total_draws, arma::mat trans_mat, arma::rowvec init_dist, arma::uvec hs);
RcppExport SEXP _conliga_simCountsFromLociCopyNum(SEXP lcnsSEXP, SEXP chr_matSEXP, SEXP meansSEXP, SEXP precisionSEXP, SEXP total_drawsSEXP, SEXP trans_matSEXP, SEXP init_distSEXP, SEXP hsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type lcns(lcnsSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type chr_mat(chr_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type means(meansSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type total_draws(total_drawsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type trans_mat(trans_matSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type init_dist(init_distSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type hs(hsSEXP);
    rcpp_result_gen = Rcpp::wrap(simCountsFromLociCopyNum(lcns, chr_mat, means, precision, total_draws, trans_mat, init_dist, hs));
    return rcpp_result_gen;
END_RCPP
}
// inferBBParamsWithPriors
void inferBBParamsWithPriors(arma::umat counts, int iterations, double means_sigma, double precision_sigma, arma::mat mean_priors, arma::vec precision_prior, std::string run_ref);
RcppExport SEXP _conliga_inferBBParamsWithPriors(SEXP countsSEXP, SEXP iterationsSEXP, SEXP means_sigmaSEXP, SEXP precision_sigmaSEXP, SEXP mean_priorsSEXP, SEXP precision_priorSEXP, SEXP run_refSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type means_sigma(means_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type precision_sigma(precision_sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean_priors(mean_priorsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type precision_prior(precision_priorSEXP);
    Rcpp::traits::input_parameter< std::string >::type run_ref(run_refSEXP);
    inferBBParamsWithPriors(counts, iterations, means_sigma, precision_sigma, mean_priors, precision_prior, run_ref);
    return R_NilValue;
END_RCPP
}
// runStickyHMM
void runStickyHMM(arma::uvec counts, arma::umat chr_mat, int max_states, arma::vec means, double precision, int iterations, arma::rowvec jump_size_prob, double gamma_a, double gamma_scale, std::string sample_ref, int thin, double norm_sigma_s, double norm_sigma_l, double precision_sigma_s, double precision_sigma_l, double hpp_g_a, double hpp_g_b, double hpp_ak_a, double hpp_ak_b, double hpp_r_c, double hpp_r_d, double precision_p_shape, double precision_p_scale, double gg, double rr, double apk, arma::uvec init_hidden_states, arma::vec init_state_rcn);
RcppExport SEXP _conliga_runStickyHMM(SEXP countsSEXP, SEXP chr_matSEXP, SEXP max_statesSEXP, SEXP meansSEXP, SEXP precisionSEXP, SEXP iterationsSEXP, SEXP jump_size_probSEXP, SEXP gamma_aSEXP, SEXP gamma_scaleSEXP, SEXP sample_refSEXP, SEXP thinSEXP, SEXP norm_sigma_sSEXP, SEXP norm_sigma_lSEXP, SEXP precision_sigma_sSEXP, SEXP precision_sigma_lSEXP, SEXP hpp_g_aSEXP, SEXP hpp_g_bSEXP, SEXP hpp_ak_aSEXP, SEXP hpp_ak_bSEXP, SEXP hpp_r_cSEXP, SEXP hpp_r_dSEXP, SEXP precision_p_shapeSEXP, SEXP precision_p_scaleSEXP, SEXP ggSEXP, SEXP rrSEXP, SEXP apkSEXP, SEXP init_hidden_statesSEXP, SEXP init_state_rcnSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type chr_mat(chr_matSEXP);
    Rcpp::traits::input_parameter< int >::type max_states(max_statesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type means(meansSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type jump_size_prob(jump_size_probSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_a(gamma_aSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    Rcpp::traits::input_parameter< std::string >::type sample_ref(sample_refSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type norm_sigma_s(norm_sigma_sSEXP);
    Rcpp::traits::input_parameter< double >::type norm_sigma_l(norm_sigma_lSEXP);
    Rcpp::traits::input_parameter< double >::type precision_sigma_s(precision_sigma_sSEXP);
    Rcpp::traits::input_parameter< double >::type precision_sigma_l(precision_sigma_lSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_g_a(hpp_g_aSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_g_b(hpp_g_bSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_ak_a(hpp_ak_aSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_ak_b(hpp_ak_bSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_r_c(hpp_r_cSEXP);
    Rcpp::traits::input_parameter< double >::type hpp_r_d(hpp_r_dSEXP);
    Rcpp::traits::input_parameter< double >::type precision_p_shape(precision_p_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type precision_p_scale(precision_p_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type gg(ggSEXP);
    Rcpp::traits::input_parameter< double >::type rr(rrSEXP);
    Rcpp::traits::input_parameter< double >::type apk(apkSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type init_hidden_states(init_hidden_statesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type init_state_rcn(init_state_rcnSEXP);
    runStickyHMM(counts, chr_mat, max_states, means, precision, iterations, jump_size_prob, gamma_a, gamma_scale, sample_ref, thin, norm_sigma_s, norm_sigma_l, precision_sigma_s, precision_sigma_l, hpp_g_a, hpp_g_b, hpp_ak_a, hpp_ak_b, hpp_r_c, hpp_r_d, precision_p_shape, precision_p_scale, gg, rr, apk, init_hidden_states, init_state_rcn);
    return R_NilValue;
END_RCPP
}
// get_state_permutations
arma::umat get_state_permutations(std::string p_file, std::string n_states_file, int total_iterations, int burn_in, int thin, int K_states, int num_obs, bool map_num_state, int stephens_max_iters);
RcppExport SEXP _conliga_get_state_permutations(SEXP p_fileSEXP, SEXP n_states_fileSEXP, SEXP total_iterationsSEXP, SEXP burn_inSEXP, SEXP thinSEXP, SEXP K_statesSEXP, SEXP num_obsSEXP, SEXP map_num_stateSEXP, SEXP stephens_max_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type p_file(p_fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type n_states_file(n_states_fileSEXP);
    Rcpp::traits::input_parameter< int >::type total_iterations(total_iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type K_states(K_statesSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< bool >::type map_num_state(map_num_stateSEXP);
    Rcpp::traits::input_parameter< int >::type stephens_max_iters(stephens_max_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(get_state_permutations(p_file, n_states_file, total_iterations, burn_in, thin, K_states, num_obs, map_num_state, stephens_max_iters));
    return rcpp_result_gen;
END_RCPP
}
// lociStateDiff
arma::uvec lociStateDiff(arma::umat& m);
RcppExport SEXP _conliga_lociStateDiff(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(lociStateDiff(m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_conliga_simulateFromIBBs", (DL_FUNC) &_conliga_simulateFromIBBs, 3},
    {"_conliga_getBBQuantiles", (DL_FUNC) &_conliga_getBBQuantiles, 4},
    {"_conliga_simStickyHMM", (DL_FUNC) &_conliga_simStickyHMM, 8},
    {"_conliga_simStickyHMMGivenStateCopyNum", (DL_FUNC) &_conliga_simStickyHMMGivenStateCopyNum, 7},
    {"_conliga_simCountsFromLociCopyNum", (DL_FUNC) &_conliga_simCountsFromLociCopyNum, 8},
    {"_conliga_inferBBParamsWithPriors", (DL_FUNC) &_conliga_inferBBParamsWithPriors, 7},
    {"_conliga_runStickyHMM", (DL_FUNC) &_conliga_runStickyHMM, 28},
    {"_conliga_get_state_permutations", (DL_FUNC) &_conliga_get_state_permutations, 9},
    {"_conliga_lociStateDiff", (DL_FUNC) &_conliga_lociStateDiff, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_conliga(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
